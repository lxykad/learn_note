if (IsBuildApp.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        // Annotation processors must be explicitly declared now
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

    }

    kapt {
//        arguments {
//            // 这里是旧版本写法！1.0.3 的用法， 用于测试兼容性，请按照文档填写参数
//            arg("wananzhuoapp", project.getName())
//        }
        generateStubs = true
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            if (IsBuildApp.toBoolean()) {
                manifest.srcFile 'src/main/independent/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //release模式下排除independent文件夹中的所有Java文件
                java {
                    exclude 'independent/**'
                }
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isRelease", "true"
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isRelease", "false"
            manifestPlaceholders = [
                    APP_NAME: "debug"
            ]
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':commonlibrary')
    kapt rootProject.ext.dependencies.arouterCompile
    api rootProject.ext.dependencies.room
    api rootProject.ext.dependencies.roomRxjava2
    kapt rootProject.ext.dependencies.roomCompile
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}
